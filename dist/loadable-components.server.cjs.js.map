{"version":3,"file":"loadable-components.server.cjs.js","sources":["../src/constants.js","../src/server/DeferredState.js","../src/server/index.js"],"sourcesContent":["export const LOADABLE_STATE = '__LOADABLE_STATE__'\nexport const LOADABLE = '@@loadable-components/loadable'\n","/* eslint-disable react/no-danger */\nimport React from 'react'\nimport { LOADABLE_STATE } from '../constants'\n\nclass DeferredState {\n  constructor(tree) {\n    this.tree = tree\n  }\n\n  getScriptContent() {\n    return `window.${LOADABLE_STATE} = ${JSON.stringify(this.tree)};`\n  }\n\n  getScriptTag() {\n    return `<script>${this.getScriptContent()}</script>`\n  }\n\n  getScriptElement() {\n    return (\n      <script dangerouslySetInnerHTML={{ __html: this.getScriptContent() }} />\n    )\n  }\n}\n\nexport default DeferredState\n","/* eslint-disable react/no-danger, no-underscore-dangle */\nimport React from 'react'\n// eslint-disable-next-line import/no-unresolved, import/extensions\nimport { componentTracker } from 'loadable-components'\nimport { LOADABLE } from '../constants'\nimport DeferredState from './DeferredState'\n\nfunction isReactElement(element) {\n  return !!element.type\n}\n\nfunction isComponentClass(Comp) {\n  return (\n    Comp.prototype && (Comp.prototype.render || Comp.prototype.isReactComponent)\n  )\n}\n\nfunction providesChildContext(instance) {\n  return !!instance.getChildContext\n}\n\n// Recurse a React Element tree, running visitor on each element.\n// If visitor returns `false`, don't call the element's render function\n//   or recurse into its child elements\nexport function walkTree(element, context, visitor) {\n  if (Array.isArray(element)) {\n    element.forEach(item => walkTree(item, context, visitor))\n    return\n  }\n\n  if (!element) {\n    return\n  }\n\n  // a stateless functional component or a class\n  if (isReactElement(element)) {\n    if (typeof element.type === 'function') {\n      const Comp = element.type\n      const props = Object.assign({}, Comp.defaultProps, element.props)\n      let childContext = context\n      let child\n\n      // Are we are a react class?\n      //   https://github.com/facebook/react/blob/master/src/renderers/shared/stack/reconciler/ReactCompositeComponent.js#L66\n      if (isComponentClass(Comp)) {\n        const instance = new Comp(props, context)\n\n        // / REACT GDS\n        if (typeof Comp.getDerivedStateFromProps === 'function') {\n          const partialState = Comp.getDerivedStateFromProps.call(\n            null,\n            element.props,\n            instance.state,\n          );\n          if (partialState != null) {\n            instance.state = Object.assign({}, instance.state, partialState);\n          }\n        }\n\n\n        // In case the user doesn't pass these to super in the constructor\n        instance.props = instance.props || props\n        instance.context = instance.context || context\n        // set the instance state to null (not undefined) if not set, to match React behaviour\n        instance.state = instance.state || null\n\n        // Override setState to just change the state, not queue up an update.\n        //   (we can't do the default React thing as we aren't mounted \"properly\"\n        //   however, we don't need to re-render as well only support setState in\n        //   componentWillMount, which happens *before* render).\n        instance.setState = newState => {\n          if (typeof newState === 'function') {\n            // React's TS type definitions don't contain context as a third parameter for\n            // setState's updater function.\n            // Remove this cast to `any` when that is fixed.\n            newState = newState(\n              instance.state,\n              instance.props,\n              instance.context,\n            )\n          }\n          instance.state = Object.assign({}, instance.state, newState)\n        }\n\n        // this is a poor man's version of\n        //   https://github.com/facebook/react/blob/master/src/renderers/shared/stack/reconciler/ReactCompositeComponent.js#L181\n        if (instance.componentWillMount) {\n          instance.componentWillMount()\n        }\n\n        if (providesChildContext(instance)) {\n          childContext = Object.assign({}, context, instance.getChildContext())\n        }\n\n        if (visitor(element, instance, context, childContext) === false) {\n          return\n        }\n\n        child = instance.render()\n      } else {\n        // just a stateless functional\n        if (visitor(element, null, context) === false) {\n          return\n        }\n\n        child = Comp(props, context)\n      }\n\n      if (child) {\n        if (Array.isArray(child)) {\n          child.forEach(item => walkTree(item, childContext, visitor))\n        } else {\n          walkTree(child, childContext, visitor)\n        }\n      }\n    } else {\n      // a basic string or dom element, just get children\n      if (visitor(element, null, context) === false) {\n        return\n      }\n\n      // Context.Provider\n      if (element.type && element.type._context) {\n        element.type._context._currentValue = element.props.value\n      }\n\n      // Context.Consumer\n      if (element && element.type && element.type.Provider) {\n        const child = element.props.children(element.type._currentValue)\n        if (child) {\n          walkTree(child, context, visitor)\n        }\n      }\n\n      if (element.props && element.props.children) {\n        React.Children.forEach(element.props.children, (child: any) => {\n          if (child) {\n            walkTree(child, context, visitor)\n          }\n        })\n      }\n    }\n  } else if (typeof element === 'string' || typeof element === 'number') {\n    // Just visit these, they are leaves so we don't keep traversing.\n    visitor(element, null, context)\n  }\n  // TODO: Portals?\n}\n\nfunction getQueriesFromTree(\n  { rootElement, rootContext = {} },\n  fetchRoot = true,\n) {\n  const queries = []\n\n  walkTree(rootElement, rootContext, (element, instance, context) => {\n    const skipRoot = !fetchRoot && element === rootElement\n\n    if (instance && instance.constructor[LOADABLE] && !skipRoot) {\n      const loadable = instance.constructor[LOADABLE]()\n      const query = loadable.load().then(() => {\n        if (!loadable.componentId) {\n          throw new Error(\n            'loadable-components: modules entry is missing, you are probably missing `loadable-components/babel` in your Babel config.',\n          )\n        }\n        return loadable.componentId\n      })\n\n      if (query) {\n        queries.push({ query, element, context })\n\n        // Tell walkTree to not recurse inside this component;  we will\n        // wait for the query to execute before attempting it.\n        return false\n      }\n    }\n\n    return true\n  })\n\n  return queries\n}\n\nexport function getLoadableState(\n  rootElement,\n  rootContext = {},\n  fetchRoot = true,\n  tree = {},\n) {\n  // Prevent duplicated components\n  componentTracker.reset()\n\n  const queries = getQueriesFromTree({ rootElement, rootContext }, fetchRoot)\n\n  // no queries found, nothing to do\n  if (!queries.length) return Promise.resolve(new DeferredState(tree))\n\n  const errors = []\n  tree.children = []\n\n  // wait on each query that we found, re-rendering the subtree when it's done\n  const mappedQueries = queries.map(({ query, element, context }) =>\n    // we've just grabbed the query for element, so don't try and get it again\n    query\n      .then(id => {\n        const subTree = { id }\n        tree.children.push(subTree)\n        return getLoadableState(element, context, false, subTree)\n      })\n      .catch(e => errors.push(e)),\n  )\n\n  return Promise.all(mappedQueries).then(() => {\n    if (errors.length > 0) {\n      if (errors.length === 1) {\n        throw errors[0]\n      } else {\n        const err = new Error(\n          `${errors.length} errors were thrown when importing your modules.`,\n        )\n        err.queryErrors = errors\n        throw err\n      }\n    }\n\n    return new DeferredState(tree)\n  })\n}\n"],"names":["LOADABLE_STATE","LOADABLE","DeferredState","tree","getScriptContent","JSON","stringify","getScriptTag","getScriptElement","__html","isReactElement","element","type","isComponentClass","Comp","prototype","render","isReactComponent","providesChildContext","instance","getChildContext","walkTree","context","visitor","Array","isArray","forEach","item","props","Object","assign","defaultProps","childContext","child","getDerivedStateFromProps","partialState","call","state","setState","newState","componentWillMount","_context","_currentValue","value","Provider","children","Children","getQueriesFromTree","rootElement","rootContext","fetchRoot","queries","skipRoot","constructor","loadable","query","load","then","componentId","Error","push","getLoadableState","reset","length","Promise","resolve","errors","mappedQueries","map","subTree","id","catch","e","all","err","queryErrors"],"mappings":"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"}